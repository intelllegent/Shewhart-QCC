library(ShewhartQCC)
install.packages("Rtools")
library(ShewhartQCC)
hello()
View(hello)
devtools::load_all(".")
devtools::load_all(".")
hello()
devtools::load_all(".")
hello()
library(ShewhartQCC)
library(ShewhartQCC)
library(ShewhartQCC)
library(tidyverse)
seq(as.Date('2012-04-7'),as.Date('2013-03-22'),'weeks'))
seq(as.Date('2012-04-7'),as.Date('2013-03-22'),'weeks')
library(tidyverse)
ucl = 10
lcl = 1
date = seq(as.Date('2012-04-7'),as.Date('2013-03-22'),'weeks')
seq = с(5,10,15)
test_seq_1_f <- tibble(data = date[1:3], value = seq)
library(tidyverse)
ucl = 10
lcl = 1
date = seq(as.Date('2012-04-7'),as.Date('2013-03-22'),'weeks')
seq = c(5,10,15)
test_seq_1_f <- tibble(data = date[1:3], value = seq)
test_seq_1_f
source('~/.active-rstudio-document')
Shewchart_1(test_seq_1_f, test_seq_1_f$value, 1, 20) # Тест пройден
library(tidyverse)
date = seq(as.Date('2012-04-7'),as.Date('2013-03-22'),'weeks')
seq = c(5,10,15)
test_seq_1_f <- tibble(data = date[1:3], value = seq)
test_seq_1_f
Shewchart_1(test_seq_1_f, test_seq_1_f$value, 1, 20) # Тест пройден Null
Shewchart_1(test_seq_1_f, test_seq_1_f$value, 7, 20) # Тест не пройден: значение 5 не прошло
Shewchart_1(test_seq_1_f, test_seq_1_f$value, 1, 14) # Тест не пройден: значение 15 не прошло
Shewchart_1(test_seq_1_f, test_seq_1_f$value, 7, 14) # Тест не пройден: значение 5 и 15 не прошли
Shewchart_1(test_seq_1_f, test_seq_1_f$value, 11, 20) # Тест не пройден: значение 5 и 10 не прошли
Shewchart_1(test_seq_1_f, test_seq_1_f$value, 1, 9) # Тест не пройден: значение 10 и 15 не прошли
Shewchart_1(test_seq_1_f, test_seq_1_f$value, 6, 7) # Тест не пройден: все значения  не прошли
length(date)
Shewchart_2(test_seq_1_f, test_seq_1_f$value,11,5) # Тест пройден Null
library(tidyverse)
date = seq(as.Date('2012-04-7'),as.Date('2013-03-22'),'weeks')
seq = c(5,10,15,0,0,0,
10,10,15,10,10,20,10,10,15)
test_seq_1_f <- tibble(data = date[1:3], value = seq)
test_seq_1_f
library(tidyverse)
date = seq(as.Date('2012-04-7'),as.Date('2013-03-22'),'weeks')
seq = c(5,10,15,0,0,0,
10,10,15,10,10,20,10,10,15)
test_seq_1_f <- tibble(data = date, value = seq)
test_seq_1_f
test_seq_1_f <- tibble(data = date[7:15], value = seq[7:15])
test_seq_1_f
Shewchart_2(test_seq_1_f, test_seq_1_f$value,11,5) # Тест пройден Null
Shewchart_2(test_seq_1_f, test_seq_1_f$value,9, 5) # Тест не пройден
Shewchart_2(test_seq_1_f, test_seq_1_f$value,21,5) # Тест не пройден
Shewchart_2(test_seq_1_f, test_seq_1_f$value,11,10) # Тест не пройден
Shewchart_2(test_seq_1_f, test_seq_1_f$value,9,15) # Тест не пройден
Shewchart_2(test_seq_1_f, test_seq_1_f$value,21,15) # Тест не пройден
Shewchart_2 <- function(table, sample, average, sigma){
data_zone_C <- NULL
data_up <- NULL
data_low <- NULL
lower_c <- average - sigma
upper_c <- average + sigma
s_zone_C <- s_Sequence_in(sample, lower_c, upper_c)
id_zone_C <- v_Position("111111111", s_zone_C)
if (length(id_zone_C)!=1){
if (id_zone_C != -1){
data_zone_C <- table[id_zone_C:(id_zone_C + 8), ]
}
}
s_upper_average <- s_Sequence_up(sample, average)
id_up <- v_Position("111111111", s_upper_average)
if (length(id_up)!=1){
if (id_up != -1){
data_up <- table[id_up:(id_up + 8), ]
}
}
id_low <- v_Position("000000000", s_upper_average)
if (length(id_low)!=1){
if (id_low != -1){
data_low <- table[id_low:(id_low + 8), ]
}
}
Fin <- do.call(rbind, list(data_zone_C, data_up, data_low))
return(Fin)
f
fg
}
Shewchart_2 <- function(table, sample, average, sigma){
data_zone_C <- NULL
data_up <- NULL
data_low <- NULL
lower_c <- average - sigma
upper_c <- average + sigma
s_zone_C <- s_Sequence_in(sample, lower_c, upper_c)
id_zone_C <- v_Position("111111111", s_zone_C)
if (length(id_zone_C)!=1){
if (id_zone_C != -1){
data_zone_C <- table[id_zone_C:(id_zone_C + 8), ]
}
}
s_upper_average <- s_Sequence_up(sample, average)
id_up <- v_Position("111111111", s_upper_average)
if (length(id_up)!=1){
if (id_up != -1){
data_up <- table[id_up:(id_up + 8), ]
}
}
id_low <- v_Position("000000000", s_upper_average)
if (length(id_low)!=1){
if (id_low != -1){
data_low <- table[id_low:(id_low + 8), ]
}
}
Fin <- do.call(rbind, list(data_zone_C, data_up, data_low))
return(Fin)
}
Shewchart_2(test_seq_1_f, test_seq_1_f$value,9, 5) # Тест не пройден
test_seq_1_f
table = test_seq_1_f
sample = test_seq_1_f$value
average = 9
sigma = 5
data_zone_C <- NULL
data_up <- NULL
data_low <- NULL
lower_c <- average - sigma
upper_c <- average + sigma
s_zone_C <- s_Sequence_in(sample, lower_c, upper_c)
id_zone_C <- v_Position("111111111", s_zone_C)
if (length(id_zone_C)!=1){
if (id_zone_C != -1){
data_zone_C <- table[id_zone_C:(id_zone_C + 8), ]
}
}
s_upper_average <- s_Sequence_up(sample, average)
id_up <- v_Position("111111111", s_upper_average)
if (length(id_up)!=1){
if (id_up != -1){
data_up <- table[id_up:(id_up + 8), ]
}
}
id_low <- v_Position("000000000", s_upper_average)
if (length(id_low)!=1){
if (id_low != -1){
data_low <- table[id_low:(id_low + 8), ]
}
}
Fin <- do.call(rbind, list(data_zone_C, data_up, data_low))
return(Fin)
table = test_seq_1_f
sample = test_seq_1_f$value
average = 9
sigma = 5
data_zone_C <- NULL
data_up <- NULL
data_low <- NULL
lower_c <- average - sigma
upper_c <- average + sigma
s_zone_C <- s_Sequence_in(sample, lower_c, upper_c)
id_zone_C <- v_Position("111111111", s_zone_C)
if (length(id_zone_C)!=1){
if (id_zone_C != -1){
data_zone_C <- table[id_zone_C:(id_zone_C + 8), ]
}
}
s_upper_average <- s_Sequence_up(sample, average)
id_up <- v_Position("111111111", s_upper_average)
if (length(id_up)!=1){
if (id_up != -1){
data_up <- table[id_up:(id_up + 8), ]
}
}
id_low <- v_Position("000000000", s_upper_average)
if (length(id_low)!=1){
if (id_low != -1){
data_low <- table[id_low:(id_low + 8), ]
}
}
Fin <- do.call(rbind, list(data_zone_C, data_up, data_low))
Fin
table = test_seq_1_f
sample = test_seq_1_f$value
average = 9
sigma = 5
data_zone_C <- NULL
data_up <- NULL
data_low <- NULL
lower_c <- average - sigma
upper_c <- average + sigma
s_zone_C <- s_Sequence_in(sample, lower_c, upper_c)
id_zone_C <- v_Position("111111111", s_zone_C)
if (length(id_zone_C)!=1){
if (id_zone_C != -1){
data_zone_C <- table[id_zone_C:(id_zone_C + 8), ]
}
}
s_upper_average <- s_Sequence_up(sample, average)
id_up <- v_Position("111111111", s_upper_average)
if (length(id_up)!=1){
if (id_up != -1){
data_up <- table[id_up:(id_up + 8), ]
}
}
id_low <- v_Position("000000000", s_upper_average)
if (length(id_low)!=1){
if (id_low != -1){
data_low <- table[id_low:(id_low + 8), ]
}
}
Fin <- do.call(rbind, list(data_zone_C, data_up, data_low))
Fin
table = test_seq_1_f
sample = test_seq_1_f$value
average = 9
sigma = 5
data_zone_C <- NULL
data_up <- NULL
data_low <- NULL
lower_c <- average - sigma
upper_c <- average + sigma
s_zone_C <- s_Sequence_in(sample, lower_c, upper_c)
id_zone_C <- v_Position("111111111", s_zone_C)
if (length(id_zone_C)!=1){
if (id_zone_C != -1){
data_zone_C <- table[id_zone_C:(id_zone_C + 8), ]
}
}
s_upper_average <- s_Sequence_up(sample, average)
id_up <- v_Position("111111111", s_upper_average)
if (length(id_up)!=1){
if (id_up != -1){
data_up <- table[id_up:(id_up + 8), ]
}
}
id_low <- v_Position("000000000", s_upper_average)
if (length(id_low)!=1){
if (id_low != -1){
data_low <- table[id_low:(id_low + 8), ]
}
}
Fin <- do.call(rbind, list(data_zone_C, data_up, data_low))
Fin
test_seq_1_f <- tibble(data = date[7:15], value = seq[7:15])
test_seq_1_f
date = seq(as.Date('2012-04-7'),as.Date('2013-03-22'),'weeks')
seq = c(5,10,15,0,0,0,
10,10,15,10,10,20,10,10,15)
test_seq_1_f <- tibble(data = date[7:15], value = seq[7:15])
test_seq_1_f
table = test_seq_1_f
sample = test_seq_1_f$value
average = 9
sigma = 5
data_zone_C <- NULL
data_up <- NULL
data_low <- NULL
lower_c <- average - sigma
upper_c <- average + sigma
s_zone_C <- s_Sequence_in(sample, lower_c, upper_c)
id_zone_C <- v_Position("111111111", s_zone_C)
if (length(id_zone_C)!=1){
if (id_zone_C != -1){
data_zone_C <- table[id_zone_C:(id_zone_C + 8), ]
}
}
s_upper_average <- s_Sequence_up(sample, average)
id_up <- v_Position("111111111", s_upper_average)
if (length(id_up)!=1){
if (id_up != -1){
data_up <- table[id_up:(id_up + 8), ]
}
}
s_zone_C <- s_Sequence_in(sample, lower_c, upper_c)
id_zone_C <- v_Position("111111111", s_zone_C)
if (length(id_zone_C) != 1) {
if (id_zone_C != -1) {
data_zone_C <- table[id_zone_C:(id_zone_C + 8),]
}
}
s_upper_average <- s_Sequence_up(sample, average)
id_up <- v_Position("111111111", s_upper_average)
if (length(id_up) != 1) {
data_up <- table[id_up:(id_up + 8),]
} else if (id_up != -1) {
data_up <- table[id_up:(id_up + 8),]
}
id_low <- v_Position("000000000", s_upper_average)
if (length(id_low) != 1) {
data_up <- table[id_up:(id_up + 8),]
} else if (id_low != -1) {
data_up <- table[id_up:(id_up + 8),]
}
Fin <- do.call(rbind, list(data_zone_C, data_up, data_low))
Fin
Fin
id_zone_C
length(id_zone_C)
id_zone_C = (1,2)
id_zone_C <- v_Position("1", s_zone_C)
id_zone_C
length(id_zone_C)
str(id_zone_C)
id_zone_C = 2
length(id_zone_C)
a=1
aa=2
if (a=1)&(aa=2){a+aa}
if (a==1)&(aa==2){a+aa}
if ((a==1)&(aa==2)){a+aa}
if ((a==1)&(aa==3)){a+aa}
table = test_seq_1_f
sample = test_seq_1_f$value
average = 9
sigma = 5
data_zone_C <- NULL
data_up <- NULL
data_low <- NULL
lower_c <- average - sigma
upper_c <- average + sigma
s_zone_C <- s_Sequence_in(sample, lower_c, upper_c)
id_zone_C <- v_Position("111111111", s_zone_C)
if ((length(id_zone_C) != 1) & (id_zone_C != -1)) {
data_zone_C <- table[id_zone_C:(id_zone_C + 8),]
}
s_upper_average <- s_Sequence_up(sample, average)
id_up <- v_Position("111111111", s_upper_average)
if ((length(id_up) != 1) & (id_up != -1)) {
data_up <- table[id_up:(id_up + 8),]
}
id_low <- v_Position("000000000", s_upper_average)
if ((length(id_low) != 1) & (id_low != -1)) {
data_low <- table[id_up:(id_up + 8),]
}
Fin <- do.call(rbind, list(data_zone_C, data_up, data_low))
Fin
table = test_seq_1_f
sample = test_seq_1_f$value
average = 9
sigma = 5
data_zone_C <- NULL
data_up <- NULL
data_low <- NULL
lower_c <- average - sigma
upper_c <- average + sigma
s_zone_C <- s_Sequence_in(sample, lower_c, upper_c)
id_zone_C <- v_Position("111111111", s_zone_C)
if (length(id_zone_C)!=1){
if (id_zone_C != -1){
data_zone_C <- table[id_zone_C:(id_zone_C + 8), ]
}
}
s_upper_average <- s_Sequence_up(sample, average)
id_up <- v_Position("111111111", s_upper_average)
if (length(id_up)!=1){
if (id_up != -1){
data_up <- table[id_up:(id_up + 8), ]
}
}
id_low <- v_Position("000000000", s_upper_average)
if (length(id_low)!=1){
if (id_low != -1){
data_low <- table[id_low:(id_low + 8), ]
}
}
Fin <- do.call(rbind, list(data_zone_C, data_up, data_low))
Fin
data_up
a ="1111111111111"
aa = "11"
match(aa,a)
match(a,qq)
match(a,aa)
intersect(1:10, 7:20)
data_zone_C <- Check_seq(table,id_zone_C)
Check_seq <- function(table, poz){
trash_tbl <- NULL
if (length(poz)!= 1){
trash_tbl <- table[poz, ]
}else if(poz != -1){
trash_tbl <- table[poz, ]
}
return(trash_tbl)
}
data_zone_C <- Check_seq(table,id_zone_C)
data_zone_C
s_upper_average <- s_Sequence_up(sample, average)
id_up <- v_Position("111111111", s_upper_average)
data_up <- Check_seq(table,id_up)
data_up
data_up
table = test_seq_1_f
sample = test_seq_1_f$value
average = 9
sigma = 5
data_zone_C <- NULL
data_up <- NULL
data_low <- NULL
lower_c <- average - sigma
upper_c <- average + sigma
s_zone_C <- s_Sequence_in(sample, lower_c, upper_c)
id_zone_C <- v_Position("111111111", s_zone_C)
data_zone_C <- Check_seq(table,id_zone_C)
if (length(id_zone_C)!=1){
data_zone_C <- table[id_zone_C:(id_zone_C + 8), ]
}else if (id_zone_C != -1){
data_zone_C <- table[id_zone_C:(id_zone_C + 8), ]
}
s_upper_average <- s_Sequence_up(sample, average)
id_up <- v_Position("111111111", s_upper_average)
if (length(id_up)!=1){
data_up <- table[id_up:(id_up + 8), ]
}else if (id_up != -1){
data_up <- table[id_up:(id_up + 8), ]
}
id_low <- v_Position("000000000", s_upper_average)
if (length(id_low)!=1){
data_low <- table[id_low:(id_low + 8), ]
} else if (id_low != -1){
data_low <- table[id_low:(id_low + 8), ]
}
Fin <- do.call(rbind, list(data_zone_C, data_up, data_low))
return(Fin)
table = test_seq_1_f
sample = test_seq_1_f$value
average = 9
sigma = 5
data_zone_C <- NULL
data_up <- NULL
data_low <- NULL
lower_c <- average - sigma
upper_c <- average + sigma
s_zone_C <- s_Sequence_in(sample, lower_c, upper_c)
id_zone_C <- v_Position("111111111", s_zone_C)
data_zone_C <- Check_seq(table,id_zone_C)
if (length(id_zone_C)!=1){
data_zone_C <- table[id_zone_C:(id_zone_C + 8), ]
}else if (id_zone_C != -1){
data_zone_C <- table[id_zone_C:(id_zone_C + 8), ]
}
s_upper_average <- s_Sequence_up(sample, average)
id_up <- v_Position("111111111", s_upper_average)
if (length(id_up)!=1){
data_up <- table[id_up:(id_up + 8), ]
}else if (id_up != -1){
data_up <- table[id_up:(id_up + 8), ]
}
id_low <- v_Position("000000000", s_upper_average)
if (length(id_low)!=1){
data_low <- table[id_low:(id_low + 8), ]
} else if (id_low != -1){
data_low <- table[id_low:(id_low + 8), ]
}
Fin <- do.call(rbind, list(data_zone_C, data_up, data_low))
Fin
test_seq_1_f <- tibble(data = date[7:15], value = seq[7:15])
test_seq_1_f
Shewchart_2(test_seq_1_f, test_seq_1_f$value,11,5) # Тест пройден Null
Shewchart_2(test_seq_1_f, test_seq_1_f$value,9, 5) # Тест не пройден
Shewchart_2(test_seq_1_f, test_seq_1_f$value,21,5) # Тест не пройден
Shewchart_2(test_seq_1_f, test_seq_1_f$value,11,10) # Тест не пройден
Shewchart_2(test_seq_1_f, test_seq_1_f$value,9,15) # Тест не пройден
Shewchart_2(test_seq_1_f, test_seq_1_f$value,21,15) # Тест не пройден
library(ShewhartQCC)
test_seq_1_f <- tibble(data = date[7:15], value = seq[7:15])
test_seq_1_f
Shewchart_2(test_seq_1_f, test_seq_1_f$value,11,5) # Тест пройден Null
Shewchart_2(test_seq_1_f, test_seq_1_f$value,9, 5) # Тест не пройден
Shewchart_2(test_seq_1_f, test_seq_1_f$value,21,5) # Тест не пройден
Shewchart_2(test_seq_1_f, test_seq_1_f$value,11,10) # Тест не пройден
Shewchart_2(test_seq_1_f, test_seq_1_f$value,9,15) # Тест не пройден
Shewchart_2(test_seq_1_f, test_seq_1_f$value,21,15) # Тест не пройден
library(ShewhartQCC)
View(Shewchart_6)
View(Shewchart_6)
devtools::load_all(".")
library(ShewhartQCC)
devtools::load_all(".")
library(ShewhartQCC)
rbind, list(NULL,NULL)
do.call(rbind, list(NULL,NULL))
do.call(rbind, list(1,NULL))
do.call(rbind, list(fin,NULL))
do.call(rbind, list(Fin,NULL))
do.call(rbind, list(Fin,NULL))
do.call(rbind, list(NULL,NULL))
library(ShewhartQCC)
